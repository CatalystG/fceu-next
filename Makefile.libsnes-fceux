DEBUG=0

ifeq ($(platform),)
platform = unix
ifeq ($(shell uname -a),)
   platform = win
else ifneq ($(findstring MINGW,$(shell uname -a)),)
   platform = win
else ifneq ($(findstring win,$(shell uname -a)),)
   platform = win
else ifneq ($(findstring Darwin,$(shell uname -a)),)
   platform = osx
endif
endif

ifeq ($(platform), unix)
   TARGET := libsnes.so
   fpic := -fPIC
   PLATFORM_DEFINES := -DLOCAL_LE=1 -DLSB_FIRST=1
   SHARED := -shared -Wl,--version-script=libsnes-fceux/link.T
else ifeq ($(platform), osx)
   TARGET := libsnes.dylib
   fpic := -fPIC
   PLATFORM_DEFINES := -DLOCAL_LE=1 -DLSB_FIRST=1
   SHARED := -dynamiclib
else ifeq ($(platform), ps3)
   TARGET := libsnes.a
   CC = $(CELL_SDK)/host-win32/ppu/bin/ppu-lv2-gcc.exe
   CXX = $(CELL_SDK)/host-win32/ppu/bin/ppu-lv2-g++.exe
   AR = $(CELL_SDK)/host-win32/ppu/bin/ppu-lv2-ar.exe
   PLATFORM_DEFINES := -D__CELLOS_LV2
   CFLAGS += -DHAVE_ASPRINTF
   CXXFLAGS += -DHAVE_ASPRINTF
else ifeq ($(platform), snc-ps3)
   TARGET := libsnes.a
   CC = $(CELL_SDK)/host-win32/sn/bin/ps3ppusnc.exe
   CXX = $(CELL_SDK)/host-win32/sn/bin/ps3ppusnc.exe
   AR = $(CELL_SDK)/host-win32/sn/bin/ps3snarl.exe
   PLATFORM_DEFINES := -D__CELLOS_LV2
   CFLAGS += -DHAVE_ASPRINTF
   CXXFLAGS += -DHAVE_ASPRINTF
else ifeq ($(platform), xenon)
   TARGET := libsnes.a
   CC = xenon-gcc
   CXX = xenon-g++
   AR = xenon-ar
   PLATFORM_DEFINES := -D__LIBXENON__
   CFLAGS += -DHAVE_ASPRINTF
else ifeq ($(platform), wii)
   TARGET := libsnes.a
   CC = powerpc-eabi-gcc
   AR = powerpc-eabi-ar
   PLATFORM_DEFINES := -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float
   CFLAGS += -DHAVE_ASPRINTF
   CXXFLAGS += -DHAVE_ASPRINTF
else
   TARGET := snes.dll
   CC = gcc
   CXX = g++
   PLATFORM_DEFINES := -DLOCAL_LE=1 -DLSB_FIRST=1
   SHARED := -shared -static-libgcc -static-libstdc++ -s -Wl,--version-script=libsnes-fceux/link.T
endif

ifeq ($(DEBUG), 1)
	CFLAGS += -O0 -g
	CXXFLAGS += -O0 -g
else
	CFLAGS += -O3
	CXXFLAGS += -O3
endif

LIBSNES_DIR := ./libsnes-fceux
FCEU_DIR := ./src-fceux
UTILS_DIR := ./utils

FCEU_SRC_DIRS := $(LIBSNES_DIR) $(FCEU_DIR) $(FCEU_DIR)/boards $(FCEU_DIR)/input $(FCEU_DIR)/mappers $(FCEU_DIR)/utils

FCEU_CXXSRCS := $(foreach dir,$(FCEU_SRC_DIRS),$(wildcard $(dir)/*.cpp))
FCEU_CXXOBJ := $(FCEU_CXXSRCS:.cpp=.o)
FCEU_CSRCS := $(foreach dir,$(FCEU_SRC_DIRS),$(wildcard $(dir)/*.c))
FCEU_COBJ := $(FCEU_CSRCS:.c=.o)

OBJS := $(FCEU_COBJ) $(FCEU_CXXOBJ)

FCEU_DEFINES := -D__LIBSNES__ -DSOUND_QUALITY=0 -DPATH_MAX=1024 -DINLINE=inline -DPSS_STYLE=1 $(PLATFORM_DEFINES)

CFLAGS += -std=gnu99 $(fpic) -Wno-write-strings $(FCEU_DEFINES)
CXXFLAGS += $(fpic) -Wno-write-strings $(FCEU_DEFINES)
LDFLAGS += -Wl,-no-undefined

INCDIRS := -I$(FCEU_DIR)

$(TARGET): $(OBJS)
ifeq ($(platform), ps3)
	$(AR) rcs $@ $(OBJS)
else ifeq ($(platform), snc-ps3)
	$(AR) rcs $@ $(OBJS)
else ifeq ($(platform), xenon)
	$(AR) rcs $@ $(OBJS)
else ifeq ($(platform), wii)
	$(AR) rcs $@ $(OBJS)
else
	$(CXX) -o $@ $(SHARED) $(OBJS) $(LDFLAGS)
endif

%.o: %.cpp
	$(CXX) -c -o $@ $< $(CXXFLAGS) $(INCDIRS)

%.o: %.c
	$(CC) -c -o $@ $< $(CFLAGS) $(INCDIRS)

clean:
	rm -f $(OBJS)
	rm -f $(TARGET)

.PHONY: clean

